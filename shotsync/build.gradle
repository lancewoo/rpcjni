plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'org.bytedeco.gradle-javacpp-build' version '1.5.7'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 30

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11"
            }
        }

        ndk {
            abiFilters "armeabi-v7a"//, "x86"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    libraryVariants.all { variant ->
        def variantName = variant.name.capitalize() // either "Debug" or "Release"
        def javaCompile = project.tasks.getByName("compile${variantName}JavaWithJavac")
        def generateJson = project.tasks.getByName("generateJsonModel$variantName")

        // Compiles NativeLibraryConfig.java
        task "javacppCompileJava$variantName"(type: JavaCompile) {
            include 'com/senter/shotsync/NativeLibraryConfig.java'
            source = javaCompile.source
            classpath = javaCompile.classpath
            destinationDir = javaCompile.destinationDir
        }

        // Parses included .h header files and outputs <TargetClassName>.java configured in NativeLibraryConfig.java
        task "javacppBuildParser$variantName"(type: org.bytedeco.gradle.javacpp.BuildTask) {
            dependsOn "javacppCompileJava$variantName"
            classPath = [javaCompile.destinationDir]
            // includePath contains places to search for header files configured in NativeLibraryConfig.java
            includePath = ["$projectDir/src/main/cpp", "$projectDir/src/main/cpp/libstc-rpc/include"]
            classOrPackageNames = ['com.senter.shotsync.NativeLibraryConfig']
            outputDirectory = file("$projectDir/src/main/java/")
        }

        // Compiles <TargetClassName>.java and everything else
        javaCompile.dependsOn "javacppBuildParser$variantName"

        // Generates jnijavacpp.cpp and <Library Name>.cpp
        task "javacppBuildCompiler$variantName"(type: org.bytedeco.gradle.javacpp.BuildTask) {
            dependsOn javaCompile
            classPath = [javaCompile.destinationDir]
            classOrPackageNames = ['com.senter.shotsync.ShotSync']
            compile = false
            deleteJniFiles = false
            outputDirectory = file("$projectDir/src/main/cpp/")
        }

        // Picks up the C++ files listed in CMakeLists.txt
        generateJson.dependsOn "javacppBuildCompiler$variantName"
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'org.bytedeco:javacpp:1.5.7'
    implementation "androidx.core:core-ktx:1.3.2"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

}